{"ast":null,"code":"var _jsxFileName = \"I:\\\\MunchHub\\\\src\\\\main\\\\java\\\\com\\\\willko\\\\spring\\\\munchhub\\\\app\\\\src\\\\GroupEdit.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass GroupEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      name: '',\n      address: '',\n      city: '',\n      stateOrProvince: '',\n      country: '',\n      postalCode: ''\n    };\n    this.state = {\n      item: this.emptyItem\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.match.params.id !== 'new') {\n      const group = await (await fetch(`/api/group/${this.props.match.params.id}`)).json();\n      this.setState({\n        item: group\n      });\n    }\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const {\n      item\n    } = this.state;\n    await fetch('/api/group', {\n      method: item.id ? 'PUT' : 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    this.props.history.push('/groups');\n  }\n\n  render() {\n    const {\n      item\n    } = this.state;\n    const title = /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, item.id ? 'Edit Group' : 'Add Group');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(AppNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: item.name || '',\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"address\",\n      id: \"address\",\n      value: item.address || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"city\",\n      id: \"city\",\n      value: item.city || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"stateOrProvince\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"State/Province\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"stateOrProvince\",\n      id: \"stateOrProvince\",\n      value: item.stateOrProvince || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-5 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"country\",\n      id: \"country\",\n      value: item.country || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-3 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"country\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Postal Code\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"postalCode\",\n      id: \"postalCode\",\n      value: item.postalCode || '',\n      onChange: this.handleChange,\n      autoComplete: \"address-level1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/groups\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default withRouter(GroupEdit);","map":{"version":3,"sources":["I:/MunchHub/src/main/java/com/willko/spring/munchhub/app/src/GroupEdit.js"],"names":["React","Component","Link","withRouter","Button","Container","Form","FormGroup","Input","Label","AppNavbar","GroupEdit","constructor","props","emptyItem","name","address","city","stateOrProvince","country","postalCode","state","item","handleChange","bind","handleSubmit","componentDidMount","match","params","id","group","fetch","json","setState","event","target","value","preventDefault","method","headers","body","JSON","stringify","history","push","render","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass GroupEdit extends Component {\r\n\r\n    emptyItem = {\r\n        name: '',\r\n        address: '',\r\n        city: '',\r\n        stateOrProvince: '',\r\n        country: '',\r\n        postalCode: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id !== 'new') {\r\n            const group = await (await fetch(`/api/group/${this.props.match.params.id}`)).json();\r\n            this.setState({item: group});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({item});\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const {item} = this.state;\r\n\r\n        await fetch('/api/group', {\r\n            method: (item.id) ? 'PUT' : 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(item),\r\n        });\r\n        this.props.history.push('/groups');\r\n    }\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2>{item.id ? 'Edit Group' : 'Add Group'}</h2>;\r\n\r\n        return <div>\r\n            <AppNavbar/>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                               onChange={this.handleChange} autoComplete=\"name\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"address\">Address</Label>\r\n                        <Input type=\"text\" name=\"address\" id=\"address\" value={item.address || ''}\r\n                               onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"city\">City</Label>\r\n                        <Input type=\"text\" name=\"city\" id=\"city\" value={item.city || ''}\r\n                               onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n                    </FormGroup>\r\n                    <div className=\"row\">\r\n                        <FormGroup className=\"col-md-4 mb-3\">\r\n                            <Label for=\"stateOrProvince\">State/Province</Label>\r\n                            <Input type=\"text\" name=\"stateOrProvince\" id=\"stateOrProvince\" value={item.stateOrProvince || ''}\r\n                                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-5 mb-3\">\r\n                            <Label for=\"country\">Country</Label>\r\n                            <Input type=\"text\" name=\"country\" id=\"country\" value={item.country || ''}\r\n                                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"col-md-3 mb-3\">\r\n                            <Label for=\"country\">Postal Code</Label>\r\n                            <Input type=\"text\" name=\"postalCode\" id=\"postalCode\" value={item.postalCode || ''}\r\n                                   onChange={this.handleChange} autoComplete=\"address-level1\"/>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/groups\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(GroupEdit);"]},"metadata":{},"sourceType":"module"}